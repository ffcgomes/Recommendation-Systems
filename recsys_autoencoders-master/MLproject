# deep_recsys/
# |__ MLproject
# |__ conda.yaml
# |__ train.py
# |__ ...

name: recsys_autoencoders
conda_env: conda.yaml

entry_points:
  main:
    parameters: 
      name:    {type: string, default: 'auto_enc'}
      factors:  {type: int, default: 15}
      layers:   {type: string, default: '[128,256,128]'}    
      epochs:   {type: int, default: 100}    
      batch:    {type: int, default: 64}    
      activation: {type: string, default: 'selu'}    
      dropout:  {type: float, default: 0.8}    
      lr:       {type: float, default: 0.0001}    
      reg:      {type: float, default: 0.01}    
    command: "python train.py 
                  --name {name}
                  --factors {factors}
                  --layers {layers}
                  --epochs {epochs}
                  --batch {batch}
                  --activation {activation}
                  --dropout {dropout}
                  --lr {lr}
                  --reg {reg}"

  data_preparation:
    parameters: 
      min_interactions:       {type: int, default: 5}
      factor_negative_sample: {type: int, default: 0}
      test_size:              {type: float, default: 0.2}
    command: "python data_preparation.py 
                      --min_interactions {min_interactions}
                      --test_size {test_size}
                      --factor_negative_sample {factor_negative_sample}"
  
  popularity_train:
    command: "python popularity_train.py"

  recommender:
    parameters:
      name:    {type: string, default: 'selu'}
      model_path: {type: string, default: 'selu'}
      user_id: {type: int, default: 1}
      topn:    {type: int, default: 10}
      view:    {type: int, default: 0}
      output:  {type: string, default: './data/predict.csv'}
    command: "python recommender.py 
                      --name {name}
                      --model_path {model_path}
                      --user_id {user_id}
                      --topn {topn}
                      --view {view}
                      --output {output}"      